create table mop1996.households(
id character varying,
jahr numeric,
bik numeric,
raumtyp numeric,
bflr numeric,
region numeric,
kreis numeric,
gemeinde numeric,
plz numeric,
gkz numeric,
ewzahl numeric,
wetter numeric,
umzug numeric,
lage numeric,
hhtyp numeric,
hhgro numeric,
p0_10 numeric,
einko numeric,
pkwhh numeric,
pkwpriv1 numeric,
pkwpriv2 numeric,
pkwpriv3 numeric,
pkwnutz1 numeric,
pkwnutz2 numeric,
pkwnutz3 numeric,
parkstr1 numeric,
parkstr2 numeric,
parkstr3 numeric,
parkgar numeric,
parkprob numeric,
haltbus numeric,
haltbusz numeric,
haltstr numeric,
haltstrz numeric,
haltu numeric,
haltuz numeric,
halts numeric,
haltsz numeric,
haltzug numeric,
haltzugz numeric,
oeffzuf numeric,
eink1 numeric,
eink1km numeric,
eink2 numeric,
eink2km numeric,
kneipe numeric,
kneipekm numeric,
kino numeric,
kinokm numeric,
sport numeric,
sportkm numeric,
zweitw numeric,
zweitwkm numeric,
carshar numeric,
handy numeric,
pc numeric,
pcweb numeric,
gewhhwo numeric
);

copy mop1996.households from '/home/dhosse/mop/1996/Haushalte.csv' delimiter ';'

create view view_mop1996_households as select
id as "Haushalts-ID",
jahr as "Erhebungsjahr",
bik as "Raumtyp nach BIK",
raumtyp as "Raumtyp nach BIK (zusammengefasst)",
bflr as "BFLR",
region as "Regionstyp nach BFLR/BBR",
kreis as "Kreistyp nach BFLR/BBR",
gemeinde as "Gemeindetyp nach BFLR/BBR",
plz as "Postleitzahl",
gkz as "Gemeindekennzahl",
ewzahl as "politische Gemeindegrößenklasse",
wetter as "Zuordnung des HH-Standorts in den Wetterbereich der Wetterstationen",
umzug as "Umzug im vergangenen Jahr",
lage as "Lage der Wohnung des HH (Selbsteinschätzung)",
hhtyp as "Haushaltstyp",
hhgro as "Anzahl Personen",
p0_10 as "Anzahl Kinder",
einko as "monatliches Haushaltseinkommen",
pkwhh as "Anzahl Pkw",
pkwpriv1 as "Eigentumsverhältnis des Erstwagens",
pkwpriv2 as "Eigentumsverhältnis des Zweitwagens",
pkwpriv3 as "Eigentumsverhältnis des Drittwagens",
pkwnutz1 as "Nutzung des Erstwagens",
pkwnutz2 as "Nutzung des Zweitwagens",
pkwnutz3 as "Nutzung des Drittwagens",
parkstr1 as "Angabe des Parkplatzes des Erstwagens",
parkstr2 as "Angabe des Parkplatzes des Zweitwagens",
parkstr3 as "Angabe des Parkplatzes des Drittwagens",
parkgar as "Garage oder privater Parkplatz vorhanden",
parkprob as "Schwierigkeit, in der Nähe der Wohnung einen Parkplatz zu finden",
haltbus as "Bushaltestelle zu Fuß zu erreichen",
haltbusz as "Dauer des Fußwegs von Wohnung zur Bushaltestelle",
haltstr as "Straßenbahnhaltestelle zu Fuß zu erreichen",
haltstrz as "Dauer des Fußwegs von Wohnung zu Straßenbahnhaltestelle",
haltu as "U-Bahn-Haltestelle zu Fuß zu erreichen",
haltuz as "Dauer des Fußwegs von Wohnung zu U-Bahn-Haltestelle",
halts as "S-Bahn-Haltestelle zu Fuß zu erreichen",
haltsz as "Dauer des Fußwegs von Wohnung zu S-Bahn-Haltestelle",
haltzug as "Bahnhof zu Fuß zu erreichen",
haltzugz as "Dauer des Fußwegs von Wohnung zu Bahnhof",
oeffzuf as "Zufriedenheit mit ÖV-Anbindung",
eink1 as "Einkaufsmöglichkeit für täglichen Bedarf (1-2 km bzw. 15 - 20 min Fußweg) vorhanden",
eink1km as "Entfernung zur nächsten Einkaufsmöglichkeit für täglichen Bedarf [km]",
eink2 as "Einkaufsmöglichkeit (1-2 km bzw. 15 - 20 min Fußweg) vorhanden",
eink2km as "Entfernung zur nächsten Einkaufsmöglichkeit [km]",
kneipe as "Kneipe / Café (1-2 km bzw. 15 - 20 min Fußweg) vorhanden",
kneipekm as "Entfernung zur nächsten Kneipe / Café [km]",
kino as "Ausgehmöglichkeiten (1-2 km bzw. 15 - 20 min Fußweg) vorhanden",
kinokm as "Entfernung zur nächsten Ausgehmöglichkeit [km]",
sport as "Sportstätten (1-2 km bzw. 15 - 20 min Fußweg) vorhanden",
sportkm as "Entfernung zur nächsten Sportstätte [km]",
zweitw as "Zweitwohnsitz vorhanden",
zweitwkm as "Entfernung zum Zweitwohnsitz [km]",
carshar as "Carsharing-Mitglied im Haushalt",
handy as "Anzahl Handys im Haushalt",
pc as "PC im Haushalt",
pcweb as "Internetzugang",
gewhhwo as "Hochrechnenfaktor"
from mop1996.households;

create table mop1996.persons(
id character varying,
persnr character varying,
jahr numeric,
ausfueller numeric,
sex numeric,
gebjahr numeric,
alter numeric,
schulab numeric,
beruf numeric,
wechsarb numeric,
lagearb numeric,
oefferr numeric,
fussmin numeric,
parkp numeric,
fspkw numeric,
fsmot numeric,
pkwverf numeric,
zeitopnv numeric,
bahncard numeric,
zweirad numeric,
moped numeric,
fahrrad numeric,
anftag numeric,
datanf character varying,
normal numeric,
krankmo numeric,
krankdi numeric,
krankmi numeric,
krankdo numeric,
krankfr numeric,
kranksa numeric,
krankso numeric,
werkmo numeric,
werkdi numeric,
werkmi numeric,
werkdo numeric,
werkfr numeric,
werksa numeric,
werkso numeric,
urlaubmo numeric,
urlaubdi numeric,
urlaubmi numeric,
urlaubdo numeric,
urlaubfr numeric,
urlaubsa numeric,
urlaubso numeric,
anorm1mo numeric,
anorm1di numeric,
anorm1mi numeric,
anorm1do numeric,
anorm1fr numeric,
anorm1sa numeric,
anorm1so numeric,
anorm2mo numeric,
anorm2di numeric,
anorm2mi numeric,
anorm2do numeric,
anorm2fr numeric,
anorm2sa numeric,
anorm2so numeric,
gewhhpwo numeric
);

copy mop1996.persons from '/home/dhosse/mop/1996/Personen.csv' delimiter ';';

create view view_mop1996_persons as select
id as "Haushalts-ID",
persnr as "Personen-ID",
jahr as "Erhebungsjahr",
ausfueller as "Ausfüllender",
sex as "Geschlecht",
gebjahr as "Geburtsjahr",
alter as "Altersklasse",
schulab as "höchster Schulabschluss",
beruf as "Berufstätigkeit",
wechsarb as "Wechsel Arbeits- / Ausbildungsplatz im letzten Jahr",
lagearb as "Lage des Arbeits- / Ausbildungsplatzes / der Schule...",
oefferr as "Erreichbarkeit des Arbeits... mit ÖV",
fussmin as "Fußweg von Haltestelle Arbeits...",
parkp as "Parkplatzsituation am Arbeits...",
fspkw as "Pkw-Führerschein",
fsmot as "Motorrad-Führerschein",
pkwverf as "Pkw-Verfügbarkeit",
zeitopnv as "Zeitkarte für ÖV vorhanden",
bahncard as "Bahncard vorhanden",
zweirad as "Zweirad vorhanden",
moped as "Mofa / Moped / Motorrad vorhanden",
fahrrad as "Fahrrad vorhanden",
anftag as "Wochentag des Beginns des Berichts",
datanf as "Datum des Beginns des Berichts",
normal as "mehr oder weniger Besonderheiten in den Berichtstagen",
krankmo as "Person war Montag krank",
krankdi as "Person war Dienstag krank",
krankmi as "Person war Mittwoch krank",
krankdo as "Person war Donnerstag krank",
krankfr as "Person war Freitag krank",
kranksa as "Person war Samstag krank",
krankso as "Person war Sonntag krank",
werkmo as "Pkw war Montag in Werkstatt",
werkdi as "Pkw war Dienstag in Werkstatt",
werkmi as "Pkw war Mittwoch in Werkstatt",
werkdo as "Pkw war Donnerstag in Werkstatt",
werkfr as "Pkw war Freitag in Werkstatt",
werksa as "Pkw war Samstag in Werkstatt",
werkso as "Pkw war Sonntag in Werkstatt",
urlaubmo as "Person war Montag im Urlaub",
urlaubdi as "Person war Dienstag im Urlaub",
urlaubmi as "Person war Mittwoch im Urlaub",
urlaubdo as "Person war Donnerstag im Urlaub",
urlaubfr as "Person war Freitag im Urlaub",
urlaubsa as "Person war Samstag im Urlaub",
urlaubso as "Person war Sonntag im Urlaub",
anorm1mo as "andere Besonderheiten am Montag: erste Nennung",
anorm1di as "andere Besonderheiten am Dienstag: erste Nennung",
anorm1mi as "andere Besonderheiten am Mittwoch: erste Nennung",
anorm1do as "andere Besonderheiten am Donnerstag: erste Nennung",
anorm1fr as "andere Besonderheiten am Freitag: erste Nennung",
anorm1sa as "andere Besonderheiten am Samstag: erste Nennung",
anorm1so as "andere Besonderheiten am Sonntag: erste Nennung",
anorm2mo as "andere Besonderheiten am Montag: zweite Nennung",
anorm2di as "andere Besonderheiten am Dienstag: zweite Nennung",
anorm2mi as "andere Besonderheiten am Mittwoch: zweite Nennung",
anorm2do as "andere Besonderheiten am Donnerstag: zweite Nennung",
anorm2fr as "andere Besonderheiten am Freitag: zweite Nennung",
anorm2sa as "andere Besonderheiten am Samstag: zweite Nennung",
anorm2so as "andere Besonderheiten am Sonntag: zweite Nennung",
gewhhpwo as "kombinierter Gewichtungsfaktor"
from mop1996.persons;

create table mop1996.children(
id character varying,
persnr character varying,
jahr numeric,
ausfueller numeric,
sex numeric,
gebjahr numeric,
beruf numeric,
wechsarb numeric,
lagearb numeric,
oefferr numeric,
fussmin numeric,
parkp numeric,
zeitopnv numeric,
bahncard numeric,
zweirad numeric,
fahrrad numeric
);

copy mop1996.children from '/home/dhosse/mop/1996/Kinder.csv' delimiter ';';

create view view_mop1996_children as select
id as "Haushalts-ID",
persnr as "Personen-ID",
jahr as "Erhebungsjahr",
ausfueller as "Ausfüllender",
sex as "Geschlecht",
gebjahr as "Geburtsjahr",
beruf as "Berufstätigkeit",
wechsarb as "Wechsel Arbeits- / Ausbildungsplatz im letzten Jahr",
lagearb as "Lage des Arbeits- / Ausbildungsplatzes / der Schule...",
oefferr as "Erreichbarkeit des Arbeits... mit ÖV",
fussmin as "Fußweg von Haltestelle Arbeits...",
parkp as "Parkplatzsituation am Arbeits...",
zeitopnv as "Zeitkarte für ÖV vorhanden",
bahncard as "Bahncard vorhanden",
zweirad as "Zweirad vorhanden",
fahrrad as "Fahrrad vorhanden"
from mop1996.children;

create table mop1996.personsWithoutJournal(
id character varying,
persnr character varying,
jahr numeric,
ausfueller numeric,
sex numeric,
gebjahr numeric,
alter numeric,
schulab numeric,
beruf numeric,
wechsarb numeric,
lagearb numeric,
oefferr numeric,
fussmin numeric,
parkp numeric,
fspkw numeric,
fsmot numeric,
pkwverf numeric,
zeitopv numeric,
bahncard numeric,
zweirad numeric,
moped numeric,
fahrrad numeric
);

copy mop1996.personswithoutjournal from '/home/dhosse/mop/1996/PoT.csv' delimiter ';';

create view view_mop1996_pot as select
id as "Haushalts-ID",
persnr as "Personen-ID",
jahr as "Erhebungsjahr",
ausfueller as "Ausfüllender",
sex as "Geschlecht",
gebjahr as "Geburtsjahr",
alter as "Alter",
schulab as "höchster Schulabschluss",
beruf as "Berufstätigkeit",
wechsarb as "Wechsel Arbeits- / Ausbildungsplatz im letzten Jahr",
lagearb as "Lage des Arbeits- / Ausbildungsplatzes / der Schule...",
oefferr as "Erreichbarkeit des Arbeits... mit ÖV",
fussmin as "Fußweg von Haltestelle Arbeits...",
parkp as "Parkplatzsituation am Arbeits...",
fspkw as "Pkw-Führerschein",
fsmot as "Motorrad-Führerschein",
pkwverf as "Pkw-Verfügbarkeit",
zeitopnv as "Zeitkarte für ÖV vorhanden",
bahncard as "Bahncard vorhanden",
zweirad as "Zweirad vorhanden",
moped as "Mofa / Moped / Motorrad vorhanden",
fahrrad as "Fahrrad vorhanden"
from mop1996.personswithoutjournal;

create table mop1996.ways(
id character varying,
persnr character varying,
jahr numeric,
wotag numeric,
bertag numeric,
datum numeric,
temp numeric,
regen numeric,
wnrt numeric,
abzeit numeric,
zweck numeric,
vm1 numeric,
vm2 numeric,
vm3 numeric,
vm4 numeric,
vm5 numeric,
vmdiw numeric,
anzeit numeric,
km numeric,
dauer numeric,
speed numeric,
weggew numeric,
kmgew numeric
);

copy mop1996.ways from '/home/dhosse/mop/1996/Wege.csv' delimiter ';';

create view view_mop1996_ways as select
id as "Haushalts-ID",
persnr as "Personen-ID",
jahr as "Erhebungsjahr",
wotag as "Wochentag",
bertag as "Berichtstag",
datum as "Datum des Tages",
temp as "Temperatur [°C]",
regen as "Regenmenge [mm]",
wnrt as "Weg-Nr.",
abzeit as "Abfahrtszeit",
zweck as "Wegezweck",
vm1 as "Erstes auf dem Weg benutztes Verkehrsmittel",
vm2 as "Zweites auf dem Weg benutztes Verkehrsmittel",
vm3 as "Drittes auf dem Weg benutztes Verkehrsmittel",
vm4 as "Viertes auf dem Weg benutztes Verkehrsmittel",
vm5 as "Fünftes auf dem Weg benutztes Verkehrsmittel",
vmdiw as "Verkehrsmittel",
anzeit as "Ankunftszeit",
km as "Entfernung",
dauer as "Wegdauer",
speed as "Geschwindigkeit",
weggew as "Weggewicht",
kmgew as "KM-Gewicht"
from mop1996.ways;

create table mop1996.personDays(
id character varying,
persnr character varying,
jahr numeric,
gewhhpwo numeric,
wotag numeric,
bertag numeric,
datum numeric,
krank numeric,
werk numeric,
urlaub numeric,
anorm1 numeric,
anorm2 numeric,
temp numeric,
regen numeric,
mobil numeric,
wegegew numeric,
kmsumgew numeric,
dausumgew numeric,
wegeungew numeric,
kmsumungew numeric,
dausumungew numeric,
anzfuss numeric,
km_fuss numeric,
dau_fuss numeric,
anzrad numeric,
km_rad numeric,
dau_rad numeric,
anzmiv numeric,
km_miv numeric,
dau_miv numeric,
anzpkwm numeric,
km_pkwm numeric,
dau_pkwm numeric,
anzpkw numeric,
km_pkw numeric,
dau_pkw numeric,
anzov numeric,
km_ov numeric,
dau_ov numeric,
anzzug numeric,
km_zug numeric,
dau_zug numeric,
anzovs numeric,
km_ovs numeric,
dau_ovs numeric,
anzbus numeric,
km_bus numeric,
dau_bus numeric,
anzarb numeric,
km_arb numeric,
dau_arb numeric,
anzausb numeric,
km_ausb numeric,
dau_ausb numeric,
anzeink numeric,
km_eink numeric,
dau_eink numeric,
anzfrei numeric,
km_frei numeric,
dau_frei numeric,
anzserv numeric,
km_serv numeric,
dau_serv numeric,
anzdien numeric,
km_dien numeric,
dau_dien numeric,
anzheim numeric,
km_heim numeric,
dau_heim numeric,
musterzw character varying,
mustervm character varying
);

copy mop1996.personDays from '/home/dhosse/mop/1996/Personentage.csv' delimiter ';';

create view view_mop1996_personDays as select
id as "Haushalts-ID",
persnr as "Personen-ID",
jahr as "Erhebungsjahr",
gewhhpwo as "Hochrechenfaktor",
wotag as "Wochentag",
bertag as "Berichtstag",
datum as "Datum des Tages",
krank as "Krank am Berichtstag",
werk as "Auto in Werkstatt am Berichtstag",
urlaub as "Urlaub am Berichtstag",
anorm1 as "andere Besonderheiten am Berichtstag",
anorm2 as "weitere Besonderheiten am Berichtstag",
temp as "Temperatur [°C]",
regen as "Regenmenge [mm]",
mobil as "Mobil am Berichtstag",
wegegew as "Wegezahl (entfernungsgewichtet)",
kmsumgew as "Strecke (entfernungsgewichtet) [km]",
dausumgew as "Dauer (entfernungsgewichtet) [min]",
wegeungew as "Wegezahl (ungewichtet)",
kmsumungew as "Strecke (ungewichtet) [km]",
dausumungew as "Dauer (ungewichtet) [min]",
anzfuss as "Anzahl Wege zu Fuß",
km_fuss as "Strecke zu Fuß (entfernungsgewichtet) [km]",
dau_fuss as "Dauer zu Fuß (entfernungsgewichtet) [min]",
anzrad as "Anzahl Wege mit Fahrrad",
km_rad as "Strecke mit Fahrrad (entfernungsgewichtet) [km]",
dau_rad as "Dauer mit Fahrrad (entfernungsgewichtet) [min]",
anzmiv as "Anzahl Wege mit MIV",
km_miv as "Strecke mit MIV (entfernungsgewichtet) [km]",
dau_miv as "Dauer mit MIV (entfernungsgewichtet) [min]",
anzpkwm as "Anzahl Wege mit Pkw als Mitfahrer",
km_pkwm as "Strecke mit Pkw als Mitfahrer (entfernungsgewichtet) [km]",
dau_pkwm as "Dauer mit Pkw als Mitfahrer (entfernungsgewichtet) [min]",
anzpkw as "Anzahl Wege mit Pkw als Fahrer",
km_pkw as "Strecke mit Pkw als Fahrer (entfernungsgewichtet) [km]",
dau_pkw as "Dauer mit Pkw als Fahrer (entfernungsgewichtet) [min]",
anzov as "Anzahl Wege mit ÖV",
km_ov as "Strecke mit ÖV (entfernungsgewichtet) [km]",
dau_ov as "Dauer mit ÖV (entfernungsgewichtet) [min]",
anzzug as "Anzahl Wege mit Zug",
km_zug as "Strecke mit Zug (entfernungsgewichtet) [km]",
dau_zug as "Dauer mit Zug (entfernungsgewichtet) [min]",
anzovs as "Anzahl Wege mit U-/S-Bahn",
km_ovs as "Strecke mit U-/S-Bahn (entfernungsgewichtet) [km]",
dau_ovs as "Dauer mit U-/S-Bahn (entfernungsgewichtet) [min]",
anzbus as "Anzahl Wege mit Bus",
km_bus as "Strecke mit Bus (entfernungsgewichtet) [km]",
dau_bus as "Dauer mit Bus (entfernungsgewichtet) [min]",
anzarb as "Anzahl Wege zur Arbeit (entfernungsgewichtet)",
km_arb as "Strecke zur Arbeit (entfernungsgewichtet) [km]",
dau_arb as "Dauer zur Arbeit (entfernungsgewichtet) [min]",
anzausb as "Anzahl Wege zur Ausbildung (entfernungsgewichtet)",
km_ausb as "Strecke zur Ausbildung (entfernungsgewichtet) [km]",
dau_ausb as "Dauer zur Ausbildung (entfernungsgewichtet) [min]",
anzeink as "Anzahl Wege zum Einkaufen (entfernungsgewichtet)",
km_eink as "Strecke zum Einkaufen (entfernungsgewichtet) [km]",
dau_eink as "Dauer zum Einkaufen (entfernungsgewichtet) [min]",
anzfrei as "Anzahl Wege zur Freizeit (entfernungsgewichtet)",
km_frei as "Strecke zur Freizeit (entfernungsgewichtet) [km]",
dau_frei as "Dauer zur Freizeit (entfernungsgewichtet) [min]",
anzserv as "Anzahl Wege zu Servicezwecken (entfernungsgewichtet)",
km_serv as "Strecke zu Servicezwecken (entfernungsgewichtet) [km]",
dau_serv as "Dauer zu Servicezwecken (entfernungsgewichtet) [min]",
anzdien as "Anzahl Wege dienstlich",
km_dien as "Strecke dienstlich (entfernungsgewichtet) [km]",
dau_dien as "Dauer dienstlich (entfernungsgewichtet) [min]",
anzheim as "Anzahl Wege nach Hause (entfernungsgewichtet)",
km_heim as "Strecke nach Hause (entfernungsgewichtet) [km]",
dau_heim as "Dauer nach Hause (entfernungsgewichtet) [min]",
musterzw as "Reihung der Wegezwecke",
mustervm as "Reihung der benutzten Verkehrsmittel"
from mop1996.personDays;
